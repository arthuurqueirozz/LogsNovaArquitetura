// <auto-generated />
using System;
using LogsInfraData.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogsInfraData.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    [Migration("20250212124701_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogsDomain.Entities.LogBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agencia")
                        .HasColumnType("int")
                        .HasColumnName("Agencia");

                    b.Property<string>("DataLog")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DataLog");

                    b.Property<bool>("Estornado")
                        .HasColumnType("bit")
                        .HasColumnName("Estornado");

                    b.Property<int>("NumeroContaDestino")
                        .HasColumnType("int")
                        .HasColumnName("NumeroContaDestino");

                    b.HasKey("Id");

                    b.ToTable("LogBase", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("LogsDomain.Entities.LogTipos.LogPagamentoBoleto", b =>
                {
                    b.HasBaseType("LogsDomain.Entities.LogBase");

                    b.Property<string>("CodigoBarrasBoleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CodigoBarrasBoleto");

                    b.Property<int>("ContaDestino")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataPagamento");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataVencimento");

                    b.Property<decimal>("ValorBoleto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ValorBoleto");

                    b.ToTable("LogPagamentoBoletos", (string)null);
                });

            modelBuilder.Entity("LogsDomain.Entities.LogTipos.LogTransacaoInterna", b =>
                {
                    b.HasBaseType("LogsDomain.Entities.LogBase");

                    b.Property<int>("NumeroContaInicio")
                        .HasColumnType("int")
                        .HasColumnName("NumeroContaInicio");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.Property<decimal>("ValorTransacao")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ValorTransacao");

                    b.ToTable("LogTransacaoInternas", (string)null);
                });

            modelBuilder.Entity("LogsDomain.Entities.LogTipos.LogPagamentoBoleto", b =>
                {
                    b.HasOne("LogsDomain.Entities.LogBase", null)
                        .WithOne()
                        .HasForeignKey("LogsDomain.Entities.LogTipos.LogPagamentoBoleto", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LogsDomain.Entities.LogTipos.LogTransacaoInterna", b =>
                {
                    b.HasOne("LogsDomain.Entities.LogBase", null)
                        .WithOne()
                        .HasForeignKey("LogsDomain.Entities.LogTipos.LogTransacaoInterna", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
